import React, { useEffect, useState } from "react";
import { useParams } from "react-router-dom";
import api from "../services/api";
import ReviewForm from "../components/ReviewForm";
import RecommendationList from "../components/RecommendationList";
import { useAuth } from "../context/AuthContext"; // Import useAuth

export default function ProductDetail() {
  const { id } = useParams();
  const [product, setProduct] = useState(null);
  const [reviews, setReviews] = useState([]);
  const [isEditingReviewId, setIsEditingReviewId] = useState(null); // State ƒë·ªÉ theo d√µi review ƒëang ch·ªânh s·ª≠a
  const { user, isAuthenticated } = useAuth(); // L·∫•y th√¥ng tin user

  const getImageUrl = (path) => {
    if (!path) return "";
    if (path.startsWith("http")) return path;
    const BASE_URL = "http://localhost:4000";
    return `${BASE_URL}${path.startsWith("/") ? path : "/" + path}`;
  };

  async function load() {
    try {
      // T·∫£i chi ti·∫øt s·∫£n ph·∫©m
      const p = await api.get(`/products/${id}`);
      setProduct(p.data);

      // T·∫£i danh s√°ch ƒë√°nh gi√°
      const r = await api.get(`/reviews/product/${id}`);
      setReviews(r.data.reviews || []);
      
      // ƒê·∫∑t l·∫°i tr·∫°ng th√°i ch·ªânh s·ª≠a sau khi t·∫£i l·∫°i
      setIsEditingReviewId(null); 
    } catch (err) {
      console.error("‚ùå L·ªói t·∫£i d·ªØ li·ªáu:", err);
    }
  }

  useEffect(() => {
    load();
  }, [id]);

  // H√†m x·ª≠ l√Ω x√≥a ƒë√°nh gi√°
  async function handleDelete(reviewId) {
    if (!window.confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a ƒë√°nh gi√° n√†y kh√¥ng?")) return;
    
    try {
      await api.delete(`/reviews/${reviewId}`);
      alert("‚úÖ X√≥a ƒë√°nh gi√° th√†nh c√¥ng!");
      load(); // T·∫£i l·∫°i danh s√°ch ƒë√°nh gi√°
    } catch (err) {
      console.error("‚ùå L·ªói x√≥a review:", err.response || err);
      alert(err.response?.data?.error || 'L·ªói x√≥a ƒë√°nh gi√°, vui l√≤ng th·ª≠ l·∫°i.');
    }
  }

  if (!product)
    return (
      <div
        style={{
          padding: 50,
          textAlign: "center",
          fontSize: 18,
          color: "#555",
        }}
      >
        üîÑ ƒêang t·∫£i d·ªØ li·ªáu s·∫£n ph·∫©m...
      </div>
    );

  const reviewToEdit = reviews.find(rv => rv.reviewId === isEditingReviewId);

  return (
    <div
      style={{
        padding: "40px 5%",
        background: "#f8f9fa",
        minHeight: "100vh",
        animation: "fadeIn 0.6s ease",
      }}
    >
      {/* ... Ph·∫ßn hi·ªÉn th·ªã th√¥ng tin s·∫£n ph·∫©m (Gi·ªØ nguy√™n) ... */}
      <div
        style={{
          display: "flex",
          flexWrap: "wrap",
          gap: 40,
          background: "#fff",
          borderRadius: 16,
          boxShadow: "0 8px 24px rgba(0,0,0,0.08)",
          padding: 30,
          marginBottom: 40,
          transition: "transform 0.3s ease",
        }}
        onMouseEnter={(e) =>
          (e.currentTarget.style.transform = "translateY(-4px)")
        }
        onMouseLeave={(e) =>
          (e.currentTarget.style.transform = "translateY(0)")
        }
      >
        {/* ·∫¢nh s·∫£n ph·∫©m */}
        <div
          style={{
            flex: "1 1 400px",
            textAlign: "center",
            background: "#fafafa",
            borderRadius: 12,
            padding: 20,
            overflow: "hidden",
          }}
        >
          <img
            src={
              product.images && product.images.length > 0
                ? getImageUrl(product.images[0])
                : "https://via.placeholder.com/400x400?text=No+Image"
            }
            alt={product.name}
            style={{
              width: "100%",
              maxWidth: 400,
              height: "auto",
              objectFit: "contain",
              transition: "transform 0.4s ease",
            }}
            onMouseEnter={(e) => (e.currentTarget.style.transform = "scale(1.08)")}
            onMouseLeave={(e) => (e.currentTarget.style.transform = "scale(1)")}
          />
        </div>

        {/* Th√¥ng tin s·∫£n ph·∫©m */}
        <div style={{ flex: "1 1 400px", paddingTop: 20 }}>
          <h1
            style={{
              fontSize: 28,
              fontWeight: 700,
              marginBottom: 10,
              color: "#222",
            }}
          >
            {product.name}
          </h1>

          <p style={{ fontSize: 16, color: "#555", lineHeight: "1.6em" }}>
            {product.description}
          </p>

          <div
            style={{
              marginTop: 20,
              fontSize: 18,
              background: "#f3f4f6",
              borderRadius: 8,
              padding: "12px 16px",
              display: "inline-block",
            }}
          >
            üí∞ <b>Gi√°:</b>{" "}
            <span style={{ color: "#d32f2f" }}>
              {product.price?.toLocaleString("vi-VN")} ‚Ç´
            </span>
          </div>

          <div style={{ marginTop: 10, fontSize: 16 }}>
            ‚≠ê <b>ƒê√°nh gi√° trung b√¨nh:</b>{" "}
            {product.meta?.avgRating
              ? `${product.meta.avgRating.toFixed(1)} / 5`
              : "Ch∆∞a c√≥"}
          </div>
        </div>
      </div>
      {/* ... H·∫øt ph·∫ßn hi·ªÉn th·ªã th√¥ng tin s·∫£n ph·∫©m ... */}


      {/* Danh s√°ch ƒë√°nh gi√° */}
      <section
        style={{
          background: "#fff",
          borderRadius: 12,
          padding: 24,
          boxShadow: "0 6px 18px rgba(0,0,0,0.05)",
          marginBottom: 40,
        }}
      >
        <h2 style={{ fontSize: 22, marginBottom: 20, color: "#333" }}>
          üí¨ ƒê√°nh gi√° s·∫£n ph·∫©m
        </h2>

        {reviews.length === 0 ? (
          <div style={{ color: "#777", fontSize: 15 }}>
            Ch∆∞a c√≥ ƒë√°nh gi√° n√†o.
          </div>
        ) : (
          <div
            style={{
              display: "flex",
              flexDirection: "column",
              gap: 16,
              animation: "fadeIn 0.5s ease",
            }}
          >
            {reviews.map((rv) => (
              <div
                key={rv.reviewId || rv._key}
                style={{
                  border: "1px solid #eee",
                  borderRadius: 10,
                  padding: 16,
                  background: "#fafafa",
                  boxShadow: "0 3px 8px rgba(0,0,0,0.05)",
                  transition: "transform 0.2s",
                }}
                onMouseEnter={(e) =>
                  (e.currentTarget.style.transform = "scale(1.01)")
                }
                onMouseLeave={(e) =>
                  (e.currentTarget.style.transform = "scale(1)")
                }
              >
                <div
                  style={{
                    display: "flex",
                    alignItems: "center",
                    marginBottom: 8,
                    gap: 10,
                  }}
                >
                  <div
                    style={{
                      width: 40,
                      height: 40,
                      borderRadius: "50%",
                      background: "#007bff",
                      color: "#fff",
                      display: "flex",
                      alignItems: "center",
                      justifyContent: "center",
                      fontWeight: 600,
                    }}
                  >
                    {rv.userName?.[0]?.toUpperCase() || "?"}
                  </div>
                  <div style={{ flexGrow: 1 }}>
                    <div style={{ fontWeight: "bold", color: "#333" }}>
                      {rv.userName || "Ng∆∞·ªùi d√πng ·∫©n"} ‚Äî ‚≠ê {rv.rating}
                    </div>
                    <div style={{ color: "#666", fontSize: 14 }}>
                      {rv.comment}
                    </div>
                  </div>

                  {/* N√∫t Ch·ªânh s·ª≠a/X√≥a */}
                  {isAuthenticated && user?.id === rv.userId && (
                    <div style={{ marginLeft: 'auto', display: 'flex', gap: 8 }}>
                      <button
                        onClick={() => setIsEditingReviewId(rv.reviewId)}
                        style={{
                          padding: '4px 8px',
                          backgroundColor: 'rgb(207, 205, 198)',
                          color: '#333',
                          border: 'none',
                          borderRadius: 4,
                          cursor: 'pointer',
                          fontSize: 12,
                          fontWeight: 500,
                        }}
                      >
                        S·ª≠a
                      </button>
                      <button
                        onClick={() => handleDelete(rv.reviewId)}
                        style={{
                          padding: '4px 8px',
                          backgroundColor: '#dc3545',
                          color: 'white',
                          border: 'none',
                          borderRadius: 4,
                          cursor: 'pointer',
                          fontSize: 12,
                          fontWeight: 500,
                        }}
                      >
                        X√≥a
                      </button>
                    </div>
                  )}
                </div>

                {/* Form ch·ªânh s·ª≠a hi·ªán ra ngay b√™n d∆∞·ªõi review */}
                {isEditingReviewId === rv.reviewId && (
                    <div style={{ marginTop: 15, borderTop: '1px solid #ddd', paddingTop: 10 }}>
                        <ReviewForm 
                            productId={id} 
                            initialReview={reviewToEdit} 
                            onAdded={load} 
                            onCancelEdit={() => setIsEditingReviewId(null)}
                        />
                    </div>
                )}

                {/* H√¨nh ·∫£nh ƒë√°nh gi√° */}
                {rv.images && rv.images.length > 0 && (
                  <div
                    style={{
                      display: "flex",
                      flexWrap: "wrap",
                      gap: 10,
                      marginTop: 10,
                    }}
                  >
                    {rv.images.map((img, idx) => (
                      <img
                        key={idx}
                        src={getImageUrl(img)}
                        alt={`review-${idx}`}
                        style={{
                          width: 90,
                          height: 90,
                          borderRadius: 8,
                          objectFit: "cover",
                          border: "1px solid #ccc",
                          transition: "transform 0.3s ease",
                        }}
                        onMouseEnter={(e) =>
                          (e.currentTarget.style.transform = "scale(1.1)")
                        }
                        onMouseLeave={(e) =>
                          (e.currentTarget.style.transform = "scale(1)")
                        }
                        onError={(e) =>
                          (e.target.src =
                            "https://via.placeholder.com/100?text=No+Image")
                        }
                      />
                    ))}
                  </div>
                )}
              </div>
            ))}
          </div>
        )}
      </section>

      {/* Form ƒë√°nh gi√° (T·∫°o m·ªõi) */}
      <section
        style={{
          background: "#fff",
          borderRadius: 12,
          padding: 24,
          boxShadow: "0 6px 18px rgba(0,0,0,0.05)",
          marginBottom: 40,
        }}
      >
        <h3 style={{ fontSize: 20, marginBottom: 16 }}>‚úçÔ∏è Vi·∫øt ƒë√°nh gi√° c·ªßa b·∫°n</h3>
        <div
          style={{
            animation: "slideUp 0.6s ease",
            borderTop: "1px solid #eee",
            paddingTop: 16,
          }}
        >
          {/* Ch·ªâ hi·ªán form t·∫°o m·ªõi n·∫øu KH√îNG C√ì review n√†o ƒëang ƒë∆∞·ª£c ch·ªânh s·ª≠a */}
          {!isEditingReviewId && <ReviewForm productId={id} onAdded={load} />}
          {isEditingReviewId && (
            <p style={{ color: '#007bff' }}>
              B·∫°n ƒëang ch·ªânh s·ª≠a ƒë√°nh gi√°. Ho√†n t·∫•t ho·∫∑c H·ªßy b·ªè ƒë·ªÉ th√™m ƒë√°nh gi√° m·ªõi.
            </p>
          )}
        </div>
      </section>

      {/* S·∫£n ph·∫©m ƒë·ªÅ xu·∫•t */}
      {/* <RecommendationList userId={"user1"} /> */}
    </div>
  );
}

/* ‚ú® Animation CSS */
const style = document.createElement("style");
style.innerHTML = `
@keyframes fadeIn {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}
@keyframes slideUp {
  from { opacity: 0; transform: translateY(30px); }
  to { opacity: 1; transform: translateY(0); }
}`;
document.head.appendChild(style);